{
    "openapi": "3.0.0",
    "info": {
        "title": "Clinic API Documentation",
        "description": "API Documentation for Clinic management system",
        "contact": {
            "email": "support@clinic.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/clients": {
            "get": {
                "tags": [
                    "Clients"
                ],
                "summary": "Get list of clients",
                "description": "Returns list of clients",
                "operationId": "d00d20521584ab5da83e088abb7aded2",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Client"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Clients"
                ],
                "summary": "Create a new client",
                "description": "Create a new client",
                "operationId": "f1e86e5b79fedfa6593067977292b13b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Client"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Client created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Client"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/clients/{id}": {
            "get": {
                "tags": [
                    "Clients"
                ],
                "summary": "Get client by ID",
                "description": "Returns a single client",
                "operationId": "4c3c7071ea1133f04bacdbc70f8aa230",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of client to return",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Client"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Client not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Clients"
                ],
                "summary": "Update an existing client",
                "description": "Update an existing client",
                "operationId": "7d0a5ae9e306858d30e04fc50265d80c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of client to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Client"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Client updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Client"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Client not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Clients"
                ],
                "summary": "Delete a client",
                "description": "Delete a client",
                "operationId": "8720346de08f1e46fe28a2a7179d23c1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of client to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Client deleted"
                    },
                    "404": {
                        "description": "Client not found"
                    }
                }
            }
        },
        "/api/doctors": {
            "get": {
                "tags": [
                    "Doctors"
                ],
                "summary": "Get list of doctors",
                "description": "Returns list of doctors",
                "operationId": "f2faa955668b3e6887792008f2d09661",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Doctor"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Doctors"
                ],
                "summary": "Create a new doctor",
                "description": "Create a new doctor",
                "operationId": "2255e99c200415626fbc1a0e6c6ee80f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Doctor"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Doctor created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Doctor"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/doctors/{id}": {
            "get": {
                "tags": [
                    "Doctors"
                ],
                "summary": "Get doctor by ID",
                "description": "Returns a single doctor",
                "operationId": "800e90f10564a8eec88cd8284dac12a2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of doctor to return",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Doctor"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Doctor not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Doctors"
                ],
                "summary": "Update an existing doctor",
                "description": "Update an existing doctor",
                "operationId": "f1cc5e93e55ace545af1bfc89b3cdf6b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of doctor to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Doctor"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Doctor updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Doctor"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Doctor not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Doctors"
                ],
                "summary": "Delete a doctor",
                "description": "Delete a doctor",
                "operationId": "de9e93a0ac9dc8cf1a199b78bdf87130",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of doctor to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Doctor deleted"
                    },
                    "404": {
                        "description": "Doctor not found"
                    }
                }
            }
        },
        "/api/slots": {
            "get": {
                "tags": [
                    "Slots"
                ],
                "summary": "Get list of slots",
                "description": "Returns list of slots",
                "operationId": "52b2e5f0f5a47bdeebd33aee49091640",
                "parameters": [
                    {
                        "name": "client_id",
                        "in": "query",
                        "description": "Client ID to filter slots",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "doctor_id",
                        "in": "query",
                        "description": "Doctor ID to filter slots",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Status to filter slots",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "available",
                                "booked",
                                "missed",
                                "done"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Slot"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Slots"
                ],
                "summary": "Create a new slot",
                "description": "Create a new slot",
                "operationId": "072807e7de7dcdb5aef91c18304bcb3a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Slot"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Slot created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Slot"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/slots/{id}": {
            "get": {
                "tags": [
                    "Slots"
                ],
                "summary": "Get slot by ID",
                "description": "Returns a single slot",
                "operationId": "f40ae8b7c5cf60f2aa364314df03f567",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of slot to return",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Slot"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Slot not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Slots"
                ],
                "summary": "Update an existing slot",
                "description": "Update an existing slot",
                "operationId": "21bc050040565f08041471cfd17fd7ec",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of slot to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Slot"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Slot updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Slot"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Slot not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Slots"
                ],
                "summary": "Delete a slot",
                "description": "Delete a slot",
                "operationId": "fbeb9ef289fcc9bf664c94b9a05e1ee2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of slot to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Slot deleted"
                    },
                    "404": {
                        "description": "Slot not found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Client": {
                "title": "Client",
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "type": "object"
            },
            "Doctor": {
                "title": "Doctor",
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "type": "object"
            },
            "Slot": {
                "title": "Slot",
                "required": [
                    "doctor_id",
                    "start_time",
                    "end_time",
                    "status"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "doctor_id": {
                        "type": "integer"
                    },
                    "client_id": {
                        "type": "integer"
                    },
                    "start_time": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "end_time": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "available",
                            "booked",
                            "missed",
                            "done"
                        ]
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Clients",
            "description": "API Endpoints of Clients"
        },
        {
            "name": "Doctors",
            "description": "API Endpoints of Doctors"
        },
        {
            "name": "Slots",
            "description": "API Endpoints of Slots"
        }
    ]
}